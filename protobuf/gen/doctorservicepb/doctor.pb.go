// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: doctor/doctor.proto

package doctorservicepb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type OperationStatus int32

const (
	OperationStatus_OPERATION_UNKNOWN OperationStatus = 0
	OperationStatus_OPERATION_SUCCESS OperationStatus = 1
	OperationStatus_OPERATION_FAILURE OperationStatus = 2
)

// Enum value maps for OperationStatus.
var (
	OperationStatus_name = map[int32]string{
		0: "OPERATION_UNKNOWN",
		1: "OPERATION_SUCCESS",
		2: "OPERATION_FAILURE",
	}
	OperationStatus_value = map[string]int32{
		"OPERATION_UNKNOWN": 0,
		"OPERATION_SUCCESS": 1,
		"OPERATION_FAILURE": 2,
	}
)

func (x OperationStatus) Enum() *OperationStatus {
	p := new(OperationStatus)
	*p = x
	return p
}

func (x OperationStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OperationStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_doctor_doctor_proto_enumTypes[0].Descriptor()
}

func (OperationStatus) Type() protoreflect.EnumType {
	return &file_doctor_doctor_proto_enumTypes[0]
}

func (x OperationStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OperationStatus.Descriptor instead.
func (OperationStatus) EnumDescriptor() ([]byte, []int) {
	return file_doctor_doctor_proto_rawDescGZIP(), []int{0}
}

type DayOfWeek int32

const (
	DayOfWeek_MONDAY    DayOfWeek = 0
	DayOfWeek_TUESDAY   DayOfWeek = 1
	DayOfWeek_WEDNESDAY DayOfWeek = 2
	DayOfWeek_THURSDAY  DayOfWeek = 3
	DayOfWeek_FRIDAY    DayOfWeek = 4
	DayOfWeek_SATURDAY  DayOfWeek = 5
	DayOfWeek_SUNDAY    DayOfWeek = 6
)

// Enum value maps for DayOfWeek.
var (
	DayOfWeek_name = map[int32]string{
		0: "MONDAY",
		1: "TUESDAY",
		2: "WEDNESDAY",
		3: "THURSDAY",
		4: "FRIDAY",
		5: "SATURDAY",
		6: "SUNDAY",
	}
	DayOfWeek_value = map[string]int32{
		"MONDAY":    0,
		"TUESDAY":   1,
		"WEDNESDAY": 2,
		"THURSDAY":  3,
		"FRIDAY":    4,
		"SATURDAY":  5,
		"SUNDAY":    6,
	}
)

func (x DayOfWeek) Enum() *DayOfWeek {
	p := new(DayOfWeek)
	*p = x
	return p
}

func (x DayOfWeek) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DayOfWeek) Descriptor() protoreflect.EnumDescriptor {
	return file_doctor_doctor_proto_enumTypes[1].Descriptor()
}

func (DayOfWeek) Type() protoreflect.EnumType {
	return &file_doctor_doctor_proto_enumTypes[1]
}

func (x DayOfWeek) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DayOfWeek.Descriptor instead.
func (DayOfWeek) EnumDescriptor() ([]byte, []int) {
	return file_doctor_doctor_proto_rawDescGZIP(), []int{1}
}

type AppointmentType_Type int32

const (
	AppointmentType_REGULAR AppointmentType_Type = 0
	AppointmentType_ONLINE  AppointmentType_Type = 1
)

// Enum value maps for AppointmentType_Type.
var (
	AppointmentType_Type_name = map[int32]string{
		0: "REGULAR",
		1: "ONLINE",
	}
	AppointmentType_Type_value = map[string]int32{
		"REGULAR": 0,
		"ONLINE":  1,
	}
)

func (x AppointmentType_Type) Enum() *AppointmentType_Type {
	p := new(AppointmentType_Type)
	*p = x
	return p
}

func (x AppointmentType_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AppointmentType_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_doctor_doctor_proto_enumTypes[2].Descriptor()
}

func (AppointmentType_Type) Type() protoreflect.EnumType {
	return &file_doctor_doctor_proto_enumTypes[2]
}

func (x AppointmentType_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AppointmentType_Type.Descriptor instead.
func (AppointmentType_Type) EnumDescriptor() ([]byte, []int) {
	return file_doctor_doctor_proto_rawDescGZIP(), []int{5, 0}
}

type Status struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        OperationStatus        `protobuf:"varint,1,opt,name=status,proto3,enum=doctorservicepb.OperationStatus" json:"status,omitempty"`
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Status) Reset() {
	*x = Status{}
	mi := &file_doctor_doctor_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Status) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Status) ProtoMessage() {}

func (x *Status) ProtoReflect() protoreflect.Message {
	mi := &file_doctor_doctor_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Status.ProtoReflect.Descriptor instead.
func (*Status) Descriptor() ([]byte, []int) {
	return file_doctor_doctor_proto_rawDescGZIP(), []int{0}
}

func (x *Status) GetStatus() OperationStatus {
	if x != nil {
		return x.Status
	}
	return OperationStatus_OPERATION_UNKNOWN
}

func (x *Status) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type DoctorFilter struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Name           string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Email          string                 `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	Specialization string                 `protobuf:"bytes,3,opt,name=specialization,proto3" json:"specialization,omitempty"`
	City           string                 `protobuf:"bytes,4,opt,name=city,proto3" json:"city,omitempty"`
	Availability   bool                   `protobuf:"varint,5,opt,name=availability,proto3" json:"availability,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *DoctorFilter) Reset() {
	*x = DoctorFilter{}
	mi := &file_doctor_doctor_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DoctorFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DoctorFilter) ProtoMessage() {}

func (x *DoctorFilter) ProtoReflect() protoreflect.Message {
	mi := &file_doctor_doctor_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DoctorFilter.ProtoReflect.Descriptor instead.
func (*DoctorFilter) Descriptor() ([]byte, []int) {
	return file_doctor_doctor_proto_rawDescGZIP(), []int{1}
}

func (x *DoctorFilter) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DoctorFilter) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *DoctorFilter) GetSpecialization() string {
	if x != nil {
		return x.Specialization
	}
	return ""
}

func (x *DoctorFilter) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *DoctorFilter) GetAvailability() bool {
	if x != nil {
		return x.Availability
	}
	return false
}

type GetDoctorsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Doctorfilter  *DoctorFilter          `protobuf:"bytes,1,opt,name=doctorfilter,proto3" json:"doctorfilter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDoctorsRequest) Reset() {
	*x = GetDoctorsRequest{}
	mi := &file_doctor_doctor_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDoctorsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDoctorsRequest) ProtoMessage() {}

func (x *GetDoctorsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_doctor_doctor_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDoctorsRequest.ProtoReflect.Descriptor instead.
func (*GetDoctorsRequest) Descriptor() ([]byte, []int) {
	return file_doctor_doctor_proto_rawDescGZIP(), []int{2}
}

func (x *GetDoctorsRequest) GetDoctorfilter() *DoctorFilter {
	if x != nil {
		return x.Doctorfilter
	}
	return nil
}

type GetDoctorsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Doctors       []*Doctor              `protobuf:"bytes,1,rep,name=doctors,proto3" json:"doctors,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDoctorsResponse) Reset() {
	*x = GetDoctorsResponse{}
	mi := &file_doctor_doctor_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDoctorsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDoctorsResponse) ProtoMessage() {}

func (x *GetDoctorsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_doctor_doctor_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDoctorsResponse.ProtoReflect.Descriptor instead.
func (*GetDoctorsResponse) Descriptor() ([]byte, []int) {
	return file_doctor_doctor_proto_rawDescGZIP(), []int{3}
}

func (x *GetDoctorsResponse) GetDoctors() []*Doctor {
	if x != nil {
		return x.Doctors
	}
	return nil
}

type Address struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Street        string                 `protobuf:"bytes,1,opt,name=street,proto3" json:"street,omitempty"`
	City          string                 `protobuf:"bytes,2,opt,name=city,proto3" json:"city,omitempty"`
	State         string                 `protobuf:"bytes,3,opt,name=state,proto3" json:"state,omitempty"`
	Zip           string                 `protobuf:"bytes,4,opt,name=zip,proto3" json:"zip,omitempty"`
	Country       string                 `protobuf:"bytes,5,opt,name=country,proto3" json:"country,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Address) Reset() {
	*x = Address{}
	mi := &file_doctor_doctor_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Address) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Address) ProtoMessage() {}

func (x *Address) ProtoReflect() protoreflect.Message {
	mi := &file_doctor_doctor_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Address.ProtoReflect.Descriptor instead.
func (*Address) Descriptor() ([]byte, []int) {
	return file_doctor_doctor_proto_rawDescGZIP(), []int{4}
}

func (x *Address) GetStreet() string {
	if x != nil {
		return x.Street
	}
	return ""
}

func (x *Address) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *Address) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *Address) GetZip() string {
	if x != nil {
		return x.Zip
	}
	return ""
}

func (x *Address) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

type AppointmentType struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Value         string                 `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AppointmentType) Reset() {
	*x = AppointmentType{}
	mi := &file_doctor_doctor_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AppointmentType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppointmentType) ProtoMessage() {}

func (x *AppointmentType) ProtoReflect() protoreflect.Message {
	mi := &file_doctor_doctor_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppointmentType.ProtoReflect.Descriptor instead.
func (*AppointmentType) Descriptor() ([]byte, []int) {
	return file_doctor_doctor_proto_rawDescGZIP(), []int{5}
}

func (x *AppointmentType) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type Procedure struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Name           string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Expertise      string                 `protobuf:"bytes,2,opt,name=expertise,proto3" json:"expertise,omitempty"`
	PerformedCount int32                  `protobuf:"varint,3,opt,name=performedCount,proto3" json:"performedCount,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Procedure) Reset() {
	*x = Procedure{}
	mi := &file_doctor_doctor_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Procedure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Procedure) ProtoMessage() {}

func (x *Procedure) ProtoReflect() protoreflect.Message {
	mi := &file_doctor_doctor_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Procedure.ProtoReflect.Descriptor instead.
func (*Procedure) Descriptor() ([]byte, []int) {
	return file_doctor_doctor_proto_rawDescGZIP(), []int{6}
}

func (x *Procedure) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Procedure) GetExpertise() string {
	if x != nil {
		return x.Expertise
	}
	return ""
}

func (x *Procedure) GetPerformedCount() int32 {
	if x != nil {
		return x.PerformedCount
	}
	return 0
}

type Certification struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Title         string                 `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Date          string                 `protobuf:"bytes,2,opt,name=date,proto3" json:"date,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Certification) Reset() {
	*x = Certification{}
	mi := &file_doctor_doctor_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Certification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Certification) ProtoMessage() {}

func (x *Certification) ProtoReflect() protoreflect.Message {
	mi := &file_doctor_doctor_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Certification.ProtoReflect.Descriptor instead.
func (*Certification) Descriptor() ([]byte, []int) {
	return file_doctor_doctor_proto_rawDescGZIP(), []int{7}
}

func (x *Certification) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Certification) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

type Doctor struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Id               string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name             string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Gender           string                 `protobuf:"bytes,3,opt,name=gender,proto3" json:"gender,omitempty"`
	Address          *Address               `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
	Specialization   string                 `protobuf:"bytes,5,opt,name=specialization,proto3" json:"specialization,omitempty"`
	LicenseId        string                 `protobuf:"bytes,6,opt,name=license_id,json=licenseId,proto3" json:"license_id,omitempty"`
	DateOfBirth      string                 `protobuf:"bytes,7,opt,name=date_of_birth,json=dateOfBirth,proto3" json:"date_of_birth,omitempty"`
	Email            string                 `protobuf:"bytes,8,opt,name=email,proto3" json:"email,omitempty"`
	Education        string                 `protobuf:"bytes,9,opt,name=education,proto3" json:"education,omitempty"`
	Languages        []string               `protobuf:"bytes,10,rep,name=languages,proto3" json:"languages,omitempty"`
	Experience       string                 `protobuf:"bytes,11,opt,name=experience,proto3" json:"experience,omitempty"`
	Procedures       []*Procedure           `protobuf:"bytes,12,rep,name=procedures,proto3" json:"procedures,omitempty"`
	Certifications   []*Certification       `protobuf:"bytes,13,rep,name=certifications,proto3" json:"certifications,omitempty"`
	Contact          string                 `protobuf:"bytes,14,opt,name=contact,proto3" json:"contact,omitempty"`
	RegularHours     []*WeeklySchedule      `protobuf:"bytes,15,rep,name=regularHours,proto3" json:"regularHours,omitempty"`
	AppointmentTypes []*AppointmentType     `protobuf:"bytes,16,rep,name=appointmentTypes,proto3" json:"appointmentTypes,omitempty"`
	SlotDuration     int32                  `protobuf:"varint,17,opt,name=slotDuration,proto3" json:"slotDuration,omitempty"`
	Availability     bool                   `protobuf:"varint,18,opt,name=availability,proto3" json:"availability,omitempty"`
	Password         string                 `protobuf:"bytes,19,opt,name=password,proto3" json:"password,omitempty"`
	CreatedAt        *timestamppb.Timestamp `protobuf:"bytes,20,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt        *timestamppb.Timestamp `protobuf:"bytes,21,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	DeletedAt        *timestamppb.Timestamp `protobuf:"bytes,22,opt,name=deletedAt,proto3" json:"deletedAt,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *Doctor) Reset() {
	*x = Doctor{}
	mi := &file_doctor_doctor_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Doctor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Doctor) ProtoMessage() {}

func (x *Doctor) ProtoReflect() protoreflect.Message {
	mi := &file_doctor_doctor_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Doctor.ProtoReflect.Descriptor instead.
func (*Doctor) Descriptor() ([]byte, []int) {
	return file_doctor_doctor_proto_rawDescGZIP(), []int{8}
}

func (x *Doctor) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Doctor) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Doctor) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

func (x *Doctor) GetAddress() *Address {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *Doctor) GetSpecialization() string {
	if x != nil {
		return x.Specialization
	}
	return ""
}

func (x *Doctor) GetLicenseId() string {
	if x != nil {
		return x.LicenseId
	}
	return ""
}

func (x *Doctor) GetDateOfBirth() string {
	if x != nil {
		return x.DateOfBirth
	}
	return ""
}

func (x *Doctor) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *Doctor) GetEducation() string {
	if x != nil {
		return x.Education
	}
	return ""
}

func (x *Doctor) GetLanguages() []string {
	if x != nil {
		return x.Languages
	}
	return nil
}

func (x *Doctor) GetExperience() string {
	if x != nil {
		return x.Experience
	}
	return ""
}

func (x *Doctor) GetProcedures() []*Procedure {
	if x != nil {
		return x.Procedures
	}
	return nil
}

func (x *Doctor) GetCertifications() []*Certification {
	if x != nil {
		return x.Certifications
	}
	return nil
}

func (x *Doctor) GetContact() string {
	if x != nil {
		return x.Contact
	}
	return ""
}

func (x *Doctor) GetRegularHours() []*WeeklySchedule {
	if x != nil {
		return x.RegularHours
	}
	return nil
}

func (x *Doctor) GetAppointmentTypes() []*AppointmentType {
	if x != nil {
		return x.AppointmentTypes
	}
	return nil
}

func (x *Doctor) GetSlotDuration() int32 {
	if x != nil {
		return x.SlotDuration
	}
	return 0
}

func (x *Doctor) GetAvailability() bool {
	if x != nil {
		return x.Availability
	}
	return false
}

func (x *Doctor) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *Doctor) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Doctor) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Doctor) GetDeletedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.DeletedAt
	}
	return nil
}

type GetDoctorScheduleRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	StartTime     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime       *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=endTime,proto3" json:"endTime,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDoctorScheduleRequest) Reset() {
	*x = GetDoctorScheduleRequest{}
	mi := &file_doctor_doctor_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDoctorScheduleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDoctorScheduleRequest) ProtoMessage() {}

func (x *GetDoctorScheduleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_doctor_doctor_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDoctorScheduleRequest.ProtoReflect.Descriptor instead.
func (*GetDoctorScheduleRequest) Descriptor() ([]byte, []int) {
	return file_doctor_doctor_proto_rawDescGZIP(), []int{9}
}

func (x *GetDoctorScheduleRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetDoctorScheduleRequest) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *GetDoctorScheduleRequest) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

type GetDoctorScheduleResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Id             string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	RegularHours   []*WeeklySchedule      `protobuf:"bytes,2,rep,name=regularHours,proto3" json:"regularHours,omitempty"`
	DoctorTimeOffs []*DoctorTimeOff       `protobuf:"bytes,3,rep,name=doctorTimeOffs,proto3" json:"doctorTimeOffs,omitempty"`
	SlotDuration   int32                  `protobuf:"varint,4,opt,name=slotDuration,proto3" json:"slotDuration,omitempty"`
	RequestStatus  *Status                `protobuf:"bytes,5,opt,name=requestStatus,proto3" json:"requestStatus,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetDoctorScheduleResponse) Reset() {
	*x = GetDoctorScheduleResponse{}
	mi := &file_doctor_doctor_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDoctorScheduleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDoctorScheduleResponse) ProtoMessage() {}

func (x *GetDoctorScheduleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_doctor_doctor_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDoctorScheduleResponse.ProtoReflect.Descriptor instead.
func (*GetDoctorScheduleResponse) Descriptor() ([]byte, []int) {
	return file_doctor_doctor_proto_rawDescGZIP(), []int{10}
}

func (x *GetDoctorScheduleResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GetDoctorScheduleResponse) GetRegularHours() []*WeeklySchedule {
	if x != nil {
		return x.RegularHours
	}
	return nil
}

func (x *GetDoctorScheduleResponse) GetDoctorTimeOffs() []*DoctorTimeOff {
	if x != nil {
		return x.DoctorTimeOffs
	}
	return nil
}

func (x *GetDoctorScheduleResponse) GetSlotDuration() int32 {
	if x != nil {
		return x.SlotDuration
	}
	return 0
}

func (x *GetDoctorScheduleResponse) GetRequestStatus() *Status {
	if x != nil {
		return x.RequestStatus
	}
	return nil
}

type WeeklySchedule struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DayOfWeek     DayOfWeek              `protobuf:"varint,1,opt,name=dayOfWeek,proto3,enum=doctorservicepb.DayOfWeek" json:"dayOfWeek,omitempty"`
	StartTime     string                 `protobuf:"bytes,2,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime       string                 `protobuf:"bytes,3,opt,name=endTime,proto3" json:"endTime,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WeeklySchedule) Reset() {
	*x = WeeklySchedule{}
	mi := &file_doctor_doctor_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WeeklySchedule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WeeklySchedule) ProtoMessage() {}

func (x *WeeklySchedule) ProtoReflect() protoreflect.Message {
	mi := &file_doctor_doctor_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WeeklySchedule.ProtoReflect.Descriptor instead.
func (*WeeklySchedule) Descriptor() ([]byte, []int) {
	return file_doctor_doctor_proto_rawDescGZIP(), []int{11}
}

func (x *WeeklySchedule) GetDayOfWeek() DayOfWeek {
	if x != nil {
		return x.DayOfWeek
	}
	return DayOfWeek_MONDAY
}

func (x *WeeklySchedule) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *WeeklySchedule) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

type DoctorTimeOff struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	DoctorId      string                 `protobuf:"bytes,2,opt,name=doctorId,proto3" json:"doctorId,omitempty"`
	StartTime     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime       *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=endTime,proto3" json:"endTime,omitempty"`
	Reason        string                 `protobuf:"bytes,5,opt,name=reason,proto3" json:"reason,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DoctorTimeOff) Reset() {
	*x = DoctorTimeOff{}
	mi := &file_doctor_doctor_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DoctorTimeOff) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DoctorTimeOff) ProtoMessage() {}

func (x *DoctorTimeOff) ProtoReflect() protoreflect.Message {
	mi := &file_doctor_doctor_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DoctorTimeOff.ProtoReflect.Descriptor instead.
func (*DoctorTimeOff) Descriptor() ([]byte, []int) {
	return file_doctor_doctor_proto_rawDescGZIP(), []int{12}
}

func (x *DoctorTimeOff) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DoctorTimeOff) GetDoctorId() string {
	if x != nil {
		return x.DoctorId
	}
	return ""
}

func (x *DoctorTimeOff) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *DoctorTimeOff) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *DoctorTimeOff) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *DoctorTimeOff) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *DoctorTimeOff) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

var File_doctor_doctor_proto protoreflect.FileDescriptor

const file_doctor_doctor_proto_rawDesc = "" +
	"\n" +
	"\x13doctor/doctor.proto\x12\x0fdoctorservicepb\x1a\x1fgoogle/protobuf/timestamp.proto\"X\n" +
	"\x06Status\x128\n" +
	"\x06status\x18\x01 \x01(\x0e2 .doctorservicepb.OperationStatusR\x06status\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error\"\x98\x01\n" +
	"\fDoctorFilter\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x14\n" +
	"\x05email\x18\x02 \x01(\tR\x05email\x12&\n" +
	"\x0especialization\x18\x03 \x01(\tR\x0especialization\x12\x12\n" +
	"\x04city\x18\x04 \x01(\tR\x04city\x12\"\n" +
	"\favailability\x18\x05 \x01(\bR\favailability\"V\n" +
	"\x11GetDoctorsRequest\x12A\n" +
	"\fdoctorfilter\x18\x01 \x01(\v2\x1d.doctorservicepb.DoctorFilterR\fdoctorfilter\"G\n" +
	"\x12GetDoctorsResponse\x121\n" +
	"\adoctors\x18\x01 \x03(\v2\x17.doctorservicepb.DoctorR\adoctors\"w\n" +
	"\aAddress\x12\x16\n" +
	"\x06street\x18\x01 \x01(\tR\x06street\x12\x12\n" +
	"\x04city\x18\x02 \x01(\tR\x04city\x12\x14\n" +
	"\x05state\x18\x03 \x01(\tR\x05state\x12\x10\n" +
	"\x03zip\x18\x04 \x01(\tR\x03zip\x12\x18\n" +
	"\acountry\x18\x05 \x01(\tR\acountry\"H\n" +
	"\x0fAppointmentType\x12\x14\n" +
	"\x05value\x18\x01 \x01(\tR\x05value\"\x1f\n" +
	"\x04Type\x12\v\n" +
	"\aREGULAR\x10\x00\x12\n" +
	"\n" +
	"\x06ONLINE\x10\x01\"e\n" +
	"\tProcedure\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1c\n" +
	"\texpertise\x18\x02 \x01(\tR\texpertise\x12&\n" +
	"\x0eperformedCount\x18\x03 \x01(\x05R\x0eperformedCount\"9\n" +
	"\rCertification\x12\x14\n" +
	"\x05title\x18\x01 \x01(\tR\x05title\x12\x12\n" +
	"\x04date\x18\x02 \x01(\tR\x04date\"\x98\a\n" +
	"\x06Doctor\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x16\n" +
	"\x06gender\x18\x03 \x01(\tR\x06gender\x122\n" +
	"\aaddress\x18\x04 \x01(\v2\x18.doctorservicepb.AddressR\aaddress\x12&\n" +
	"\x0especialization\x18\x05 \x01(\tR\x0especialization\x12\x1d\n" +
	"\n" +
	"license_id\x18\x06 \x01(\tR\tlicenseId\x12\"\n" +
	"\rdate_of_birth\x18\a \x01(\tR\vdateOfBirth\x12\x14\n" +
	"\x05email\x18\b \x01(\tR\x05email\x12\x1c\n" +
	"\teducation\x18\t \x01(\tR\teducation\x12\x1c\n" +
	"\tlanguages\x18\n" +
	" \x03(\tR\tlanguages\x12\x1e\n" +
	"\n" +
	"experience\x18\v \x01(\tR\n" +
	"experience\x12:\n" +
	"\n" +
	"procedures\x18\f \x03(\v2\x1a.doctorservicepb.ProcedureR\n" +
	"procedures\x12F\n" +
	"\x0ecertifications\x18\r \x03(\v2\x1e.doctorservicepb.CertificationR\x0ecertifications\x12\x18\n" +
	"\acontact\x18\x0e \x01(\tR\acontact\x12C\n" +
	"\fregularHours\x18\x0f \x03(\v2\x1f.doctorservicepb.WeeklyScheduleR\fregularHours\x12L\n" +
	"\x10appointmentTypes\x18\x10 \x03(\v2 .doctorservicepb.AppointmentTypeR\x10appointmentTypes\x12\"\n" +
	"\fslotDuration\x18\x11 \x01(\x05R\fslotDuration\x12\"\n" +
	"\favailability\x18\x12 \x01(\bR\favailability\x12\x1a\n" +
	"\bpassword\x18\x13 \x01(\tR\bpassword\x128\n" +
	"\tcreatedAt\x18\x14 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x128\n" +
	"\tupdatedAt\x18\x15 \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x128\n" +
	"\tdeletedAt\x18\x16 \x01(\v2\x1a.google.protobuf.TimestampR\tdeletedAt\"\x9a\x01\n" +
	"\x18GetDoctorScheduleRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x128\n" +
	"\tstartTime\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\tstartTime\x124\n" +
	"\aendTime\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\aendTime\"\x9b\x02\n" +
	"\x19GetDoctorScheduleResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12C\n" +
	"\fregularHours\x18\x02 \x03(\v2\x1f.doctorservicepb.WeeklyScheduleR\fregularHours\x12F\n" +
	"\x0edoctorTimeOffs\x18\x03 \x03(\v2\x1e.doctorservicepb.DoctorTimeOffR\x0edoctorTimeOffs\x12\"\n" +
	"\fslotDuration\x18\x04 \x01(\x05R\fslotDuration\x12=\n" +
	"\rrequestStatus\x18\x05 \x01(\v2\x17.doctorservicepb.StatusR\rrequestStatus\"\x82\x01\n" +
	"\x0eWeeklySchedule\x128\n" +
	"\tdayOfWeek\x18\x01 \x01(\x0e2\x1a.doctorservicepb.DayOfWeekR\tdayOfWeek\x12\x1c\n" +
	"\tstartTime\x18\x02 \x01(\tR\tstartTime\x12\x18\n" +
	"\aendTime\x18\x03 \x01(\tR\aendTime\"\xb7\x02\n" +
	"\rDoctorTimeOff\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1a\n" +
	"\bdoctorId\x18\x02 \x01(\tR\bdoctorId\x128\n" +
	"\tstartTime\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\tstartTime\x124\n" +
	"\aendTime\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\aendTime\x12\x16\n" +
	"\x06reason\x18\x05 \x01(\tR\x06reason\x128\n" +
	"\tcreatedAt\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x128\n" +
	"\tupdatedAt\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt*V\n" +
	"\x0fOperationStatus\x12\x15\n" +
	"\x11OPERATION_UNKNOWN\x10\x00\x12\x15\n" +
	"\x11OPERATION_SUCCESS\x10\x01\x12\x15\n" +
	"\x11OPERATION_FAILURE\x10\x02*g\n" +
	"\tDayOfWeek\x12\n" +
	"\n" +
	"\x06MONDAY\x10\x00\x12\v\n" +
	"\aTUESDAY\x10\x01\x12\r\n" +
	"\tWEDNESDAY\x10\x02\x12\f\n" +
	"\bTHURSDAY\x10\x03\x12\n" +
	"\n" +
	"\x06FRIDAY\x10\x04\x12\f\n" +
	"\bSATURDAY\x10\x05\x12\n" +
	"\n" +
	"\x06SUNDAY\x10\x062\xde\x01\n" +
	"\x15DoctorScheduleService\x12W\n" +
	"\n" +
	"GetDoctors\x12\".doctorservicepb.GetDoctorsRequest\x1a#.doctorservicepb.GetDoctorsResponse\"\x00\x12l\n" +
	"\x11GetDoctorSchedule\x12).doctorservicepb.GetDoctorScheduleRequest\x1a*.doctorservicepb.GetDoctorScheduleResponse\"\x00B#Z!./doctorservicepb;doctorservicepbb\x06proto3"

var (
	file_doctor_doctor_proto_rawDescOnce sync.Once
	file_doctor_doctor_proto_rawDescData []byte
)

func file_doctor_doctor_proto_rawDescGZIP() []byte {
	file_doctor_doctor_proto_rawDescOnce.Do(func() {
		file_doctor_doctor_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_doctor_doctor_proto_rawDesc), len(file_doctor_doctor_proto_rawDesc)))
	})
	return file_doctor_doctor_proto_rawDescData
}

var file_doctor_doctor_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_doctor_doctor_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_doctor_doctor_proto_goTypes = []any{
	(OperationStatus)(0),              // 0: doctorservicepb.OperationStatus
	(DayOfWeek)(0),                    // 1: doctorservicepb.DayOfWeek
	(AppointmentType_Type)(0),         // 2: doctorservicepb.AppointmentType.Type
	(*Status)(nil),                    // 3: doctorservicepb.Status
	(*DoctorFilter)(nil),              // 4: doctorservicepb.DoctorFilter
	(*GetDoctorsRequest)(nil),         // 5: doctorservicepb.GetDoctorsRequest
	(*GetDoctorsResponse)(nil),        // 6: doctorservicepb.GetDoctorsResponse
	(*Address)(nil),                   // 7: doctorservicepb.Address
	(*AppointmentType)(nil),           // 8: doctorservicepb.AppointmentType
	(*Procedure)(nil),                 // 9: doctorservicepb.Procedure
	(*Certification)(nil),             // 10: doctorservicepb.Certification
	(*Doctor)(nil),                    // 11: doctorservicepb.Doctor
	(*GetDoctorScheduleRequest)(nil),  // 12: doctorservicepb.GetDoctorScheduleRequest
	(*GetDoctorScheduleResponse)(nil), // 13: doctorservicepb.GetDoctorScheduleResponse
	(*WeeklySchedule)(nil),            // 14: doctorservicepb.WeeklySchedule
	(*DoctorTimeOff)(nil),             // 15: doctorservicepb.DoctorTimeOff
	(*timestamppb.Timestamp)(nil),     // 16: google.protobuf.Timestamp
}
var file_doctor_doctor_proto_depIdxs = []int32{
	0,  // 0: doctorservicepb.Status.status:type_name -> doctorservicepb.OperationStatus
	4,  // 1: doctorservicepb.GetDoctorsRequest.doctorfilter:type_name -> doctorservicepb.DoctorFilter
	11, // 2: doctorservicepb.GetDoctorsResponse.doctors:type_name -> doctorservicepb.Doctor
	7,  // 3: doctorservicepb.Doctor.address:type_name -> doctorservicepb.Address
	9,  // 4: doctorservicepb.Doctor.procedures:type_name -> doctorservicepb.Procedure
	10, // 5: doctorservicepb.Doctor.certifications:type_name -> doctorservicepb.Certification
	14, // 6: doctorservicepb.Doctor.regularHours:type_name -> doctorservicepb.WeeklySchedule
	8,  // 7: doctorservicepb.Doctor.appointmentTypes:type_name -> doctorservicepb.AppointmentType
	16, // 8: doctorservicepb.Doctor.createdAt:type_name -> google.protobuf.Timestamp
	16, // 9: doctorservicepb.Doctor.updatedAt:type_name -> google.protobuf.Timestamp
	16, // 10: doctorservicepb.Doctor.deletedAt:type_name -> google.protobuf.Timestamp
	16, // 11: doctorservicepb.GetDoctorScheduleRequest.startTime:type_name -> google.protobuf.Timestamp
	16, // 12: doctorservicepb.GetDoctorScheduleRequest.endTime:type_name -> google.protobuf.Timestamp
	14, // 13: doctorservicepb.GetDoctorScheduleResponse.regularHours:type_name -> doctorservicepb.WeeklySchedule
	15, // 14: doctorservicepb.GetDoctorScheduleResponse.doctorTimeOffs:type_name -> doctorservicepb.DoctorTimeOff
	3,  // 15: doctorservicepb.GetDoctorScheduleResponse.requestStatus:type_name -> doctorservicepb.Status
	1,  // 16: doctorservicepb.WeeklySchedule.dayOfWeek:type_name -> doctorservicepb.DayOfWeek
	16, // 17: doctorservicepb.DoctorTimeOff.startTime:type_name -> google.protobuf.Timestamp
	16, // 18: doctorservicepb.DoctorTimeOff.endTime:type_name -> google.protobuf.Timestamp
	16, // 19: doctorservicepb.DoctorTimeOff.createdAt:type_name -> google.protobuf.Timestamp
	16, // 20: doctorservicepb.DoctorTimeOff.updatedAt:type_name -> google.protobuf.Timestamp
	5,  // 21: doctorservicepb.DoctorScheduleService.GetDoctors:input_type -> doctorservicepb.GetDoctorsRequest
	12, // 22: doctorservicepb.DoctorScheduleService.GetDoctorSchedule:input_type -> doctorservicepb.GetDoctorScheduleRequest
	6,  // 23: doctorservicepb.DoctorScheduleService.GetDoctors:output_type -> doctorservicepb.GetDoctorsResponse
	13, // 24: doctorservicepb.DoctorScheduleService.GetDoctorSchedule:output_type -> doctorservicepb.GetDoctorScheduleResponse
	23, // [23:25] is the sub-list for method output_type
	21, // [21:23] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_doctor_doctor_proto_init() }
func file_doctor_doctor_proto_init() {
	if File_doctor_doctor_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_doctor_doctor_proto_rawDesc), len(file_doctor_doctor_proto_rawDesc)),
			NumEnums:      3,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_doctor_doctor_proto_goTypes,
		DependencyIndexes: file_doctor_doctor_proto_depIdxs,
		EnumInfos:         file_doctor_doctor_proto_enumTypes,
		MessageInfos:      file_doctor_doctor_proto_msgTypes,
	}.Build()
	File_doctor_doctor_proto = out.File
	file_doctor_doctor_proto_goTypes = nil
	file_doctor_doctor_proto_depIdxs = nil
}
