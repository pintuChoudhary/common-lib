syntax = "proto3";

package doctorservicepb;

import "google/protobuf/timestamp.proto";

option go_package="./doctorservicepb;doctorservicepb";

service DoctorScheduleService {
    rpc GetDoctors(GetDoctorsRequest) returns (GetDoctorsResponse) {}
    rpc GetDoctorSchedule(GetDoctorScheduleRequest) returns (GetDoctorScheduleResponse){}
}

enum OperationStatus{
    OPERATION_UNKNOWN = 0;
    OPERATION_SUCCESS = 1;
    OPERATION_FAILURE = 2;
}

message Status {
    OperationStatus status = 1;
    string error = 2;
}

message DoctorFilter {
    string name = 1;
    string email = 2;
    string specialization = 3;
    string city = 4;
    bool availability = 5;
}


message GetDoctorsRequest{
    DoctorFilter doctorfilter = 1;
}

message GetDoctorsResponse{
    repeated Doctor doctors = 1;
}

message Address {
    string street = 1;
    string city = 2;
    string state = 3;
    string zip = 4;
    string country = 5;
}

message AppointmentType {
    string value = 1;
    enum Type {
        REGULAR = 0;
        ONLINE = 1;
    }
}

message Procedure {
    string name = 1;
    string expertise = 2;
    int32 performedCount = 3;
}

message Certification {
    string title = 1;
    string date = 2;
}

message Doctor {
    string id = 1;
    string name = 2;
    string gender = 3;
    Address address = 4;
    string specialization = 5;
    string license_id = 6;
    string date_of_birth = 7;
    string email = 8;
    string education = 9;
    repeated string languages = 10;
    string experience = 11;
    repeated Procedure procedures = 12;
    repeated Certification certifications = 13;
    string contact = 14;
    repeated WeeklySchedule regularHours = 15;
    repeated AppointmentType appointmentTypes = 16;
    int32 slotDuration = 17;
    bool availability = 18;
    string password = 19;
    google.protobuf.Timestamp createdAt = 20;
    google.protobuf.Timestamp updatedAt = 21;
    google.protobuf.Timestamp deletedAt = 22;
}

message GetDoctorScheduleRequest{
    string id = 1;
    google.protobuf.Timestamp startTime = 2;
    google.protobuf.Timestamp endTime = 3;
}

message GetDoctorScheduleResponse{
    string id = 1;
    repeated WeeklySchedule regularHours = 2;
    repeated DoctorTimeOff doctorTimeOffs = 3;
    int32 slotDuration = 4;
    Status requestStatus = 5;
}

enum DayOfWeek {
    MONDAY = 0;
    TUESDAY = 1;
    WEDNESDAY = 2;
    THURSDAY = 3;
    FRIDAY = 4;
    SATURDAY = 5;
    SUNDAY = 6;
}

message WeeklySchedule {
  DayOfWeek dayOfWeek = 1;
  string startTime = 2;
  string endTime = 3;
}

message DoctorTimeOff {
  string id = 1; 
  string doctorId = 2;
  google.protobuf.Timestamp startTime = 3;
  google.protobuf.Timestamp endTime = 4;
  string reason = 5;
  google.protobuf.Timestamp createdAt = 6;
  google.protobuf.Timestamp updatedAt = 7;
}